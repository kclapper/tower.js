type Complex = number;
type Real = number;
type Rational = number;
type Integer = number;
type TowerNum = Complex | Real | Rational | Integer;
export declare function isNumber(v: any): boolean;
export declare function isComplex(v: any): boolean;
export declare function isReal(v: any): boolean;
export declare function isRational(v: any): boolean;
export declare function isInteger(v: any): boolean;
export declare function isExactInteger(v: any): boolean;
export declare function isExactNonNegativeInteger(v: any): boolean;
export declare function isExactPositiveInteger(v: any): boolean;
export declare function isInexactReal(v: any): boolean;
export declare function isFixnum(v: any): boolean;
export declare function isFlonum(v: any): boolean;
export declare function isZero(v: TowerNum): boolean;
export declare function isPositive(v: Real): boolean;
export declare function isNegative(v: Real): boolean;
export declare function isEven(v: Integer): boolean;
export declare function isOdd(v: Integer): boolean;
export declare function isExact(v: TowerNum): boolean;
export declare function isInexact(v: TowerNum): boolean;
export {};
